<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>windows永久激活教程(亲测免费)</title>
      <link href="/2021/02/19/windows-yong-jiu-ji-huo-jiao-cheng-qin-ce-mian-fei/"/>
      <url>/2021/02/19/windows-yong-jiu-ji-huo-jiao-cheng-qin-ce-mian-fei/</url>
      
        <content type="html"><![CDATA[<h4 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h4><blockquote><p>本教程是windows10永久激活教程，可以帮你永久激活你的windows10</p></blockquote><h4 id="2-工具下载：百度网盘链接"><a href="#2-工具下载：百度网盘链接" class="headerlink" title="2.工具下载：百度网盘链接"></a>2.工具下载：百度网盘链接</h4><blockquote><p>链接：<a href="https://pan.baidu.com/s/1U1-cflBPPwGopFnx2aBhOg" target="_blank" rel="noopener">https://pan.baidu.com/s/1U1-cflBPPwGopFnx2aBhOg</a>  提取码：cm6p </p></blockquote><h4 id="3-工具使用说明"><a href="#3-工具使用说明" class="headerlink" title="3. 工具使用说明"></a>3. 工具使用说明</h4><blockquote><p>1.从网盘中下载工具</p><p>2.下载完成后将其解压即可</p><p>3.解压完成后点击进去，首先要解除杀毒软件警告（你懂的），然后直接进入Activation.cmd的cmd命令(如果有损害计算机的相关字眼时点击仍然运行(你懂的))，成功进入后的界面如下：</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/19.jpg" alt=""></p><p>4.进入上图显示cmd命令界面后按照界面指示进行傻瓜式操作即可</p><p>5.命令运行完毕后可查看计算机是否被永久激活：输入win+r 后输入 slmgr.vbs -xpr 查看 </p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 永久激活 </tag>
            
            <tag> windows </tag>
            
            <tag> 免费 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git中Updates were rejected because the tip of your current branch is behind解决方案</title>
      <link href="/2021/02/19/git-zhong-updates-were-rejected-because-the-tip-of-your-current-branch-is-behind-jie-jue-fang-an/"/>
      <url>/2021/02/19/git-zhong-updates-were-rejected-because-the-tip-of-your-current-branch-is-behind-jie-jue-fang-an/</url>
      
        <content type="html"><![CDATA[<h4 id="1-错误说明"><a href="#1-错误说明" class="headerlink" title="1.错误说明"></a>1.错误说明</h4><blockquote><p>出现这个错误的原因是git本地仓库的当前版本低于远程仓库的版本(大白话就是：你在github上进行的修改没有同步到本地git仓库中)。</p></blockquote><h4 id="2-错误原因"><a href="#2-错误原因" class="headerlink" title="2.错误原因"></a>2.错误原因</h4><ul><li><p>第一种错误的原因</p><blockquote><p>某一天你在本地仓库进行了相关修改然后上传到远程仓库中，这时本地仓库和远程仓库都是同步的，不会出现这种错误。过了几天你突然在github看到了一个错误需要修改，但你并没有通过本地仓库进行修改而是直接在github上进行修改，然后保存修改。这里就要注意一个问题，之前你通过本地仓库进行修改文章最后都会上传到远程仓库(也就是github中)，这就保证了远程仓库和本地仓库是同步的，但是如果你直接在远程仓库(github)中进行修改，默认是不会上传到本地的，这就导致了一个问题，本地仓库中的相关内容没有被修改，而远程仓库中的相关内容被修改，这里可以理解为远程仓库更新了而本地仓库没有更新，这就导致了本地仓库的版本落后于远程仓库，也就是本地仓库和远程仓库版本不一致。而你现在直接在本地仓库这个落后的仓库中修改相关文件然后上传到远程仓库中就会出现错误，本地的修改是基于之前版本的修改，这种修改无法基于远程仓库中这种之后的版本，因为要修改的地方原本的内容都不同就会导致有些修改方法无法实现(比如说本地仓库要把1变为2就加一就可以了，但是远程仓库不是1而是3，这是如果用本地仓库的修改方法也加一就会变为4，这显然是不合适的)。</p></blockquote></li><li><p>第二种原因</p><blockquote><p>在企业开发中，通常一个项目不是由一个人独立完成的而是由多个人共同完成的，由于另外的程序员更改了相关的代码并向远程上传了更改，而你没有同步他的更改而是在之前的基础上也更改了并上传就会出现版本低于远程版本的错误无法修改。举个简单的例子，要实现一个算式3先加一在减二最终得到2的功能，实现这个功能需要两步：先加一j，然后减二。假设你负责实现加一的功能，另外一个程序员实现减二的功能，现在本地仓库和远程仓库的数字都是3，正常情况下是你先实现加一的功能使本地的数字变为4然后上传到远程使远程的数字变为4，然后另一位程序员将远程更改后的数字4同步到本地使本地的数字也变为4，然后在本地4的基础上实现减二的功能使其变为2然后上传到远程使其也变为2，最后你同步远程的2到本地使你的本地数字也变为2，这样就实现了该功能。但是由于你的个人原因，让另一位程序员提前你一步实现减二的功能并上传到远程，导致远程的数字变为了0，而你现在上传加一的功能肯定是会报错的，如果成功那么远程就变为了1这显然是达不到功能需求的。</p></blockquote></li></ul><h4 id="3-解决方案"><a href="#3-解决方案" class="headerlink" title="3.解决方案"></a>3.解决方案</h4><ul><li><p>错误的解决方案(注意是错误的解决方案)</p><blockquote><p> 在终端下输入：git push -u origin master -f<br> 这句话执行的后果就是在远程仓库中进行的相关修改会被删除，使远程仓库回到你本地仓库未修改之前的那个版本，然后上传你基于本地仓库的修改。这如果在企业开发中就会让别的程序员的这些天的开发付之东流，一切回到解放前。</p></blockquote></li><li><p>正确的解决方案</p><blockquote><p>先在终端下输入：git pull origin master<br>这句话是说将远程中进行的相关修改保存下来<br>但这时可能会报错：error: Your local changes to the following files would be overwritten by merge:<br>解决方案看我另一篇博客：<a href="https://blog.csdn.net/IT_SoftEngineer/article/details/107133284" target="_blank" rel="noopener">https://blog.csdn.net/IT_SoftEngineer/article/details/107133284</a><br>解决上述问题后就可保证远程仓库的更新会被同步到本地而本地仓库的修改也不会被覆盖<br>然后就是add,commit,push命令将本地的修改上传到远程仓库中</p></blockquote></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql+navicat安装和破解</title>
      <link href="/2020/08/19/mysql-he-navicat-an-zhuang-he-po-jie/"/>
      <url>/2020/08/19/mysql-he-navicat-an-zhuang-he-po-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="1-mysql安装"><a href="#1-mysql安装" class="headerlink" title="1. mysql安装"></a>1. mysql安装</h3><ol><li><p>安装地址</p><blockquote><p><a href="https://pan.baidu.com/s/1r1Jdf0rPXrMsphYpXj1WPw" target="_blank" rel="noopener">https://pan.baidu.com/s/1r1Jdf0rPXrMsphYpXj1WPw</a> uphv</p></blockquote></li><li><p>安装过程中的注意事项</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/41.png" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/42.png" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/43.png" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/44.png" alt=""></p></li><li><p>配置环境变量</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/45.png" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/46.png" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/47.png" alt=""></p></li></ol><h3 id="2-navicat安装"><a href="#2-navicat安装" class="headerlink" title="2. navicat安装"></a>2. navicat安装</h3><ol><li><p>安装包地址</p><blockquote><p><a href="https://pan.baidu.com/s/1ncSaxId2miL2s5hV8u_hSw" target="_blank" rel="noopener">https://pan.baidu.com/s/1ncSaxId2miL2s5hV8u_hSw</a> atpa (这里面包含安装包和破解程序)</p></blockquote></li><li><p>安装过程：傻瓜式操作</p></li></ol><h3 id="3-navicat破解"><a href="#3-navicat破解" class="headerlink" title="3. navicat破解"></a>3. navicat破解</h3><ol><li><p>安装包在上面已经给了，把破解工具Navicat_Keygen_Patch解压并以管理员身份运行</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/48.png" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/49.png" alt=""></p><blockquote><p>选择navicat的安装目录下的exe文件</p></blockquote><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/50.png" alt=""></p><blockquote><p>出现这个界面表示破解成功，出现其他界面表示破解失败，需要且在原先安装的navicat然后重新安装</p></blockquote><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/51.png" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/52.png" alt=""></p><blockquote><p>打开安装的navicat，选择激活然后输入破解软件中的激活码</p></blockquote><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/53.png" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/54.png" alt=""></p><blockquote><p>将请求码复制到破解软件中</p></blockquote><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/55.png" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/56.png" alt=""></p><blockquote><p>然后回到navicat，发现已经出现了激活码，选择激活即可</p></blockquote><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/57.png" alt=""></p><blockquote><p>重新打开navicat，判断是否激活</p></blockquote><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/58.png" alt=""></p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 破解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯新闻疫情数据分析</title>
      <link href="/2020/08/18/teng-xun-xin-wen-yi-qing-shu-ju-fen-xi/"/>
      <url>/2020/08/18/teng-xun-xin-wen-yi-qing-shu-ju-fen-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="1-腾讯新闻数据爬取"><a href="#1-腾讯新闻数据爬取" class="headerlink" title="1. 腾讯新闻数据爬取"></a>1. 腾讯新闻数据爬取</h3><blockquote><p>这里分两部分来进行数据的相关爬取，分别为国内的疫情数据爬取和海外疫情数据爬取</p></blockquote><h4 id="1-1-国内疫情数据爬取"><a href="#1-1-国内疫情数据爬取" class="headerlink" title="1.1 国内疫情数据爬取"></a>1.1 国内疫情数据爬取</h4><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""国内疫情数据解析"""</span><span class="token keyword">import</span> json<span class="token punctuation">,</span>pandas<span class="token punctuation">,</span>time<span class="token punctuation">,</span>requestsurl <span class="token operator">=</span> <span class="token string">'https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&amp;callback=&amp;_=%d'</span><span class="token operator">%</span>int<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>data_1 <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>date <span class="token operator">=</span> data_1<span class="token punctuation">[</span><span class="token string">"lastUpdateTime"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span>china_province <span class="token operator">=</span> data_1<span class="token punctuation">[</span><span class="token string">"areaTree"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"children"</span><span class="token punctuation">]</span>china_data <span class="token operator">=</span> pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"地区"</span><span class="token punctuation">,</span><span class="token string">"新增确诊"</span><span class="token punctuation">,</span><span class="token string">"现有确诊"</span><span class="token punctuation">,</span><span class="token string">"累计确诊"</span><span class="token punctuation">,</span><span class="token string">"累计死亡"</span><span class="token punctuation">,</span><span class="token string">"死亡率"</span><span class="token punctuation">,</span><span class="token string">"累计治愈"</span><span class="token punctuation">,</span><span class="token string">"治愈率"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> china_province<span class="token punctuation">:</span>    area_name <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span>    today_confirm <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"today"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"confirm"</span><span class="token punctuation">]</span>    nowConfirm <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"nowConfirm"</span><span class="token punctuation">]</span>    total_confirm <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"confirm"</span><span class="token punctuation">]</span>    total_dead <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"dead"</span><span class="token punctuation">]</span>    deadRate <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"deadRate"</span><span class="token punctuation">]</span>    total_heal <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"heal"</span><span class="token punctuation">]</span>    healRate <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"healRate"</span><span class="token punctuation">]</span>    china_data <span class="token operator">=</span> china_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"地区"</span><span class="token punctuation">:</span>area_name<span class="token punctuation">,</span><span class="token string">"新增确诊"</span><span class="token punctuation">:</span>today_confirm<span class="token punctuation">,</span><span class="token string">"现有确诊"</span><span class="token punctuation">:</span>nowConfirm<span class="token punctuation">,</span>                                                     <span class="token string">"累计确诊"</span><span class="token punctuation">:</span>total_confirm<span class="token punctuation">,</span><span class="token string">"累计死亡"</span><span class="token punctuation">:</span>total_dead<span class="token punctuation">,</span><span class="token string">"死亡率"</span><span class="token punctuation">:</span>deadRate<span class="token punctuation">,</span>                                                     <span class="token string">"累计治愈"</span><span class="token punctuation">:</span>total_heal<span class="token punctuation">,</span><span class="token string">"治愈率"</span><span class="token punctuation">:</span>healRate<span class="token punctuation">}</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> i<span class="token punctuation">[</span><span class="token string">"children"</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        area_name <span class="token operator">=</span> j<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span>        today_confirm <span class="token operator">=</span> j<span class="token punctuation">[</span><span class="token string">"today"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"confirm"</span><span class="token punctuation">]</span>        nowConfirm <span class="token operator">=</span> j<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"nowConfirm"</span><span class="token punctuation">]</span>        total_confirm <span class="token operator">=</span> j<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"confirm"</span><span class="token punctuation">]</span>        total_dead <span class="token operator">=</span> j<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"dead"</span><span class="token punctuation">]</span>        deadRate <span class="token operator">=</span> j<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"deadRate"</span><span class="token punctuation">]</span>        total_heal <span class="token operator">=</span> j<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"heal"</span><span class="token punctuation">]</span>        healRate <span class="token operator">=</span> j<span class="token punctuation">[</span><span class="token string">"total"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"healRate"</span><span class="token punctuation">]</span>        china_data <span class="token operator">=</span> china_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"地区"</span><span class="token punctuation">:</span>area_name<span class="token punctuation">,</span><span class="token string">"新增确诊"</span><span class="token punctuation">:</span>today_confirm<span class="token punctuation">,</span><span class="token string">"现有确诊"</span><span class="token punctuation">:</span>nowConfirm<span class="token punctuation">,</span>                                                     <span class="token string">"累计确诊"</span><span class="token punctuation">:</span>total_confirm<span class="token punctuation">,</span><span class="token string">"累计死亡"</span><span class="token punctuation">:</span>total_dead<span class="token punctuation">,</span><span class="token string">"死亡率"</span><span class="token punctuation">:</span>deadRate<span class="token punctuation">,</span>                                                     <span class="token string">"累计治愈"</span><span class="token punctuation">:</span>total_heal<span class="token punctuation">,</span><span class="token string">"治愈率"</span><span class="token punctuation">:</span>healRate<span class="token punctuation">}</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>china_data<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">"./china_data_{}.csv"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><h4 id="1-2-海外疫情数据爬取"><a href="#1-2-海外疫情数据爬取" class="headerlink" title="1.2 海外疫情数据爬取"></a>1.2 海外疫情数据爬取</h4><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""海外疫情数据解析"""</span><span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">"https://api.inews.qq.com/newsqa/v1/automation/foreign/country/ranklist"</span>data_2 <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span>overseas_data <span class="token operator">=</span> pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"国家"</span><span class="token punctuation">,</span><span class="token string">"所属洲"</span><span class="token punctuation">,</span><span class="token string">"新增确诊"</span><span class="token punctuation">,</span><span class="token string">"现有确诊"</span><span class="token punctuation">,</span><span class="token string">"累计确诊"</span><span class="token punctuation">,</span><span class="token string">"累计死亡"</span><span class="token punctuation">,</span><span class="token string">"累计治愈"</span><span class="token punctuation">,</span><span class="token string">"新增现有确诊"</span><span class="token punctuation">,</span>                                         <span class="token string">"新增治愈"</span><span class="token punctuation">,</span> <span class="token string">"新增死亡"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>times <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> data_2<span class="token punctuation">:</span>    overseas_name <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span>    overseas_continent <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"continent"</span><span class="token punctuation">]</span>    new_confirm <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"confirmAdd"</span><span class="token punctuation">]</span>    total_confirm <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"confirm"</span><span class="token punctuation">]</span>    total_dead <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"dead"</span><span class="token punctuation">]</span>    total_heal <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"heal"</span><span class="token punctuation">]</span>    now_confirm <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"nowConfirm"</span><span class="token punctuation">]</span>    new_now_confirm <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"nowConfirmCompare"</span><span class="token punctuation">]</span>    new_heal <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"healCompare"</span><span class="token punctuation">]</span>    new_head <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token string">"deadCompare"</span><span class="token punctuation">]</span>    overseas_data <span class="token operator">=</span> overseas_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"国家"</span><span class="token punctuation">:</span>overseas_name<span class="token punctuation">,</span><span class="token string">"所属洲"</span><span class="token punctuation">:</span>overseas_continent<span class="token punctuation">,</span><span class="token string">"新增确诊"</span><span class="token punctuation">:</span>new_confirm<span class="token punctuation">,</span>                                                           <span class="token string">"现有确诊"</span><span class="token punctuation">:</span>now_confirm<span class="token punctuation">,</span><span class="token string">"累计确诊"</span><span class="token punctuation">:</span>total_confirm<span class="token punctuation">,</span><span class="token string">"累计死亡"</span><span class="token punctuation">:</span>total_dead<span class="token punctuation">,</span>                                                           <span class="token string">"累计治愈"</span><span class="token punctuation">:</span>total_heal<span class="token punctuation">,</span><span class="token string">"新增现有确诊"</span><span class="token punctuation">:</span>new_now_confirm<span class="token punctuation">,</span>                                                           <span class="token string">"新增治愈"</span><span class="token punctuation">:</span>new_heal<span class="token punctuation">,</span> <span class="token string">"新增死亡"</span><span class="token punctuation">:</span>new_head<span class="token punctuation">}</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>overseas_data<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">"./overseas_data_{}.csv"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>times<span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><h3 id="2-疫情数据分析"><a href="#2-疫情数据分析" class="headerlink" title="2. 疫情数据分析"></a>2. 疫情数据分析</h3><blockquote><p>这里分两部分来进行数据的分析，分别为国内疫情分析和海外疫情分析</p></blockquote><h4 id="2-1-国内疫情分析"><a href="#2-1-国内疫情分析" class="headerlink" title="2.1 国内疫情分析"></a>2.1 国内疫情分析</h4><h5 id="2-1-1-国内累计确诊饼图"><a href="#2-1-1-国内累计确诊饼图" class="headerlink" title="2.1.1 国内累计确诊饼图"></a>2.1.1 国内累计确诊饼图</h5><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""国内疫情数据分析"""</span><span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>charts <span class="token keyword">import</span> Pie<span class="token keyword">import</span> pyecharts<span class="token punctuation">.</span>options <span class="token keyword">as</span> optsdf_china<span class="token operator">=</span>pandas<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">"./china_data_{}.csv"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span>header<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>index_col<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>num <span class="token operator">=</span> data_1<span class="token punctuation">[</span><span class="token string">'areaTree'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'children'</span><span class="token punctuation">]</span>china_area <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> num<span class="token punctuation">:</span>    china_area<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>china_confirm <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> china_area<span class="token punctuation">:</span>    china_confirm<span class="token punctuation">.</span>append<span class="token punctuation">(</span>df_china<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"累计确诊"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pie <span class="token operator">=</span> <span class="token punctuation">(</span>    Pie<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>add<span class="token punctuation">(</span>series_name<span class="token operator">=</span><span class="token string">"{}日全国累计确诊数"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span>        data_pair<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span> <span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> zip<span class="token punctuation">(</span>china_area<span class="token punctuation">,</span> china_confirm<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>set_series_opts<span class="token punctuation">(</span>label_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>LabelOpts<span class="token punctuation">(</span>is_show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>legend_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>LegendOpts<span class="token punctuation">(</span>is_show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pie<span class="token punctuation">.</span>render_notebook<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/32.png" alt=""></p><h5 id="2-1-2-国内疫情累计确诊top10柱状图"><a href="#2-1-2-国内疫情累计确诊top10柱状图" class="headerlink" title="2.1.2 国内疫情累计确诊top10柱状图"></a>2.1.2 国内疫情累计确诊top10柱状图</h5><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""国内累计确诊top10"""</span>china_ten <span class="token operator">=</span> pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"地区"</span><span class="token punctuation">:</span>china_area<span class="token punctuation">,</span> <span class="token string">"累计确诊"</span><span class="token punctuation">:</span>china_confirm<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">"累计确诊"</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>china_ten <span class="token operator">=</span> china_ten<span class="token punctuation">.</span>values<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>china_area_top <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>confirm <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    china_area_top<span class="token punctuation">.</span>append<span class="token punctuation">(</span>china_ten<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#  这里由于吉林省和吉林市在表中都称为吉林，如果直接运行则会发生歧义</span><span class="token comment" spellcheck="true"># 这里手动修改csv中第二个吉林为吉林市后重新运行</span><span class="token triple-quoted-string string">"""国内疫情数据分析"""</span>的代码<span class="token punctuation">,</span>然后运行该部分就不会报错    confirm<span class="token punctuation">.</span>append<span class="token punctuation">(</span>china_ten<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      bar <span class="token operator">=</span> <span class="token punctuation">(</span>        Bar<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span>add_xaxis<span class="token punctuation">(</span>china_area_top<span class="token punctuation">)</span>        <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">"累计确诊"</span><span class="token punctuation">,</span> confirm<span class="token punctuation">)</span>        <span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>title_opts <span class="token operator">=</span> opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"国内累计确诊top10"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>bar<span class="token punctuation">.</span>render_notebook<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/33.png" alt=""></p><h5 id="2-1-3-国内疫情累计确诊折线图"><a href="#2-1-3-国内疫情累计确诊折线图" class="headerlink" title="2.1.3 国内疫情累计确诊折线图"></a>2.1.3 国内疫情累计确诊折线图</h5><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""国内以往数据解析"""</span><span class="token keyword">import</span> time<span class="token punctuation">,</span> json<span class="token punctuation">,</span> requests<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token keyword">def</span> <span class="token function">catch_daily</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://view.inews.qq.com/g2/getOnsInfo?name=wuwei_ww_cn_day_counts&amp;callback=&amp;_=%d'</span><span class="token operator">%</span>int<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    data<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    date_list <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 日期</span>    confirm_list <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 确诊</span>    suspect_list <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 疑似</span>    dead_list <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 死亡</span>    heal_list <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 治愈</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> data<span class="token punctuation">:</span>        month<span class="token punctuation">,</span> day <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>        date_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span><span class="token string">'2020-%s-%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>month<span class="token punctuation">,</span> day<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        confirm_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'confirm'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        suspect_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'suspect'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        dead_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'dead'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        heal_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'heal'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> date_list<span class="token punctuation">,</span> confirm_list<span class="token punctuation">,</span> suspect_list<span class="token punctuation">,</span> dead_list<span class="token punctuation">,</span> heal_list<span class="token keyword">def</span> <span class="token function">load_csv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 获取数据</span>    date_list<span class="token punctuation">,</span> confirm_list<span class="token punctuation">,</span> suspect_list<span class="token punctuation">,</span> dead_list<span class="token punctuation">,</span> heal_list <span class="token operator">=</span> catch_daily<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 获取当前日期命名(2020-02-13-daily.csv)</span>    n <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-daily.csv"</span>    fw <span class="token operator">=</span> open<span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'date,confirm,suspect,dead,heal\n'</span><span class="token punctuation">)</span>    i <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> i<span class="token operator">&lt;</span>len<span class="token punctuation">(</span>date_list<span class="token punctuation">)</span><span class="token punctuation">:</span>        date <span class="token operator">=</span> str<span class="token punctuation">(</span>date_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span>date<span class="token operator">+</span><span class="token string">','</span><span class="token operator">+</span>str<span class="token punctuation">(</span>confirm_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">','</span><span class="token operator">+</span>str<span class="token punctuation">(</span>suspect_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">','</span><span class="token operator">+</span>str<span class="token punctuation">(</span>dead_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">','</span><span class="token operator">+</span>str<span class="token punctuation">(</span>heal_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"数据全部导入完毕"</span><span class="token punctuation">)</span>        fw<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 主函数</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    load_csv<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""国内每日疫情可视化"""</span><span class="token keyword">import</span> time<span class="token punctuation">,</span> json<span class="token punctuation">,</span> requests<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> pyecharts<span class="token punctuation">.</span>options <span class="token keyword">as</span> opts<span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>charts <span class="token keyword">import</span> Line<span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>utils <span class="token keyword">import</span> JsCoden <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-daily.csv"</span>data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>n<span class="token punctuation">)</span>date_list <span class="token operator">=</span> list<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>confirm_list <span class="token operator">=</span> list<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'confirm'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>suspect_list <span class="token operator">=</span> list<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'suspect'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>dead_list <span class="token operator">=</span> list<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'dead'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>heal_list <span class="token operator">=</span> list<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'heal'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>line <span class="token operator">=</span> <span class="token punctuation">(</span>    Line<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_xaxis<span class="token punctuation">(</span>date_list<span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">'累计确诊'</span><span class="token punctuation">,</span> confirm_list<span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">'疑似病例'</span><span class="token punctuation">,</span> suspect_list<span class="token punctuation">,</span> is_smooth<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#平滑</span>    <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">'累计死亡'</span><span class="token punctuation">,</span> dead_list<span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">'累计治愈'</span><span class="token punctuation">,</span> heal_list<span class="token punctuation">)</span>    <span class="token punctuation">.</span>set_series_opts<span class="token punctuation">(</span>label_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>LabelOpts<span class="token punctuation">(</span>is_show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 设置x轴标签旋转角度</span>    <span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>xaxis_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>AxisOpts<span class="token punctuation">(</span>axislabel_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>LabelOpts<span class="token punctuation">(</span>rotate<span class="token operator">=</span><span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      yaxis_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>AxisOpts<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'人数'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      title_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">'国内疫情数据'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span>line<span class="token punctuation">.</span>render_notebook<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/34.png" alt=""></p><h4 id="2-2-海外疫情分析"><a href="#2-2-海外疫情分析" class="headerlink" title="2.2 海外疫情分析"></a>2.2 海外疫情分析</h4><h5 id="2-2-1-海外累计确诊饼图"><a href="#2-2-1-海外累计确诊饼图" class="headerlink" title="2.2.1 海外累计确诊饼图"></a>2.2.1 海外累计确诊饼图</h5><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""海外疫情数据分析"""</span><span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>charts <span class="token keyword">import</span> Piedf_overseas<span class="token operator">=</span>pandas<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">"./overseas_data_{}.csv"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span>header<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>data_3 <span class="token operator">=</span> df_overseas<span class="token punctuation">.</span>values<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>overseas_country <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>overseas_confirm <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> data_3<span class="token punctuation">:</span>    overseas_country<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    overseas_confirm<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pie <span class="token operator">=</span> <span class="token punctuation">(</span>    Pie<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>add<span class="token punctuation">(</span>series_name<span class="token operator">=</span><span class="token string">"{}日海外累计确诊数"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span>        data_pair<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span> <span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> zip<span class="token punctuation">(</span>overseas_country<span class="token punctuation">,</span> overseas_confirm<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>set_series_opts<span class="token punctuation">(</span>label_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>LabelOpts<span class="token punctuation">(</span>is_show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>legend_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>LegendOpts<span class="token punctuation">(</span>is_show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pie<span class="token punctuation">.</span>render_notebook<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/35.png" alt=""></p><h5 id="2-2-2-海外疫情累计确诊top10柱状图"><a href="#2-2-2-海外疫情累计确诊top10柱状图" class="headerlink" title="2.2.2 海外疫情累计确诊top10柱状图"></a>2.2.2 海外疫情累计确诊top10柱状图</h5><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""海外累计确诊top10"""</span><span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>charts <span class="token keyword">import</span> Bardf_top <span class="token operator">=</span> df_overseas<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">"累计确诊"</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>df_top <span class="token operator">=</span> df_top<span class="token punctuation">.</span>values<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>country<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>confirm<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>df_top<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    country<span class="token punctuation">.</span>append<span class="token punctuation">(</span>df_top<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    confirm<span class="token punctuation">.</span>append<span class="token punctuation">(</span>df_top<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>bar <span class="token operator">=</span> <span class="token punctuation">(</span>    Bar<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_xaxis<span class="token punctuation">(</span>country<span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">"累计确诊"</span><span class="token punctuation">,</span> confirm<span class="token punctuation">)</span>    <span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>title_opts <span class="token operator">=</span> opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"海外累计确诊top10"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>bar<span class="token punctuation">.</span>render_notebook<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/37.png" alt=""></p><h5 id="2-2-3-美国疫情累计确诊折线图"><a href="#2-2-3-美国疫情累计确诊折线图" class="headerlink" title="2.2.3 美国疫情累计确诊折线图"></a>2.2.3 美国疫情累计确诊折线图</h5><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""美国历史数据解析"""</span><span class="token keyword">import</span> requests<span class="token punctuation">,</span>json<span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>charts <span class="token keyword">import</span> Line<span class="token keyword">import</span> pyecharts<span class="token punctuation">.</span>options <span class="token keyword">as</span> optsurl <span class="token operator">=</span> <span class="token string">"https://api.inews.qq.com/newsqa/v1/automation/foreign/daily/list?country=%E7%BE%8E%E5%9B%BD"</span>reponse <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">)</span>usa_data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>reponse<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span>usa_confirm <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>usa_date <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>usa_dead <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>usa_heal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>usa_add <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> usa_data<span class="token punctuation">:</span>    usa_date<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">"date"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    usa_confirm<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">"confirm"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    usa_dead<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">"dead"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    usa_heal<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">"heal"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    usa_add<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token string">"confirm_add"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>line<span class="token operator">=</span> <span class="token punctuation">(</span>    Line<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_xaxis<span class="token punctuation">(</span>usa_date<span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">"确诊人数"</span><span class="token punctuation">,</span> usa_confirm<span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">"死亡人数"</span><span class="token punctuation">,</span> usa_dead<span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">"治愈人数"</span><span class="token punctuation">,</span> usa_heal<span class="token punctuation">)</span>    <span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">"新增人数"</span><span class="token punctuation">,</span> usa_add<span class="token punctuation">)</span>    <span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>title_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">'美国疫情数据可视化'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>set_series_opts<span class="token punctuation">(</span>label_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>LabelOpts<span class="token punctuation">(</span>is_show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>line<span class="token punctuation">.</span>render_notebook<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/38.png" alt=""></p><h3 id="3-疫情地图可视化"><a href="#3-疫情地图可视化" class="headerlink" title="3. 疫情地图可视化"></a>3. 疫情地图可视化</h3><blockquote><p>这里分两部分来进行数据的分析，分别为国内疫情地图可视化和海外疫情分析地图可视化</p></blockquote><h4 id="3-1-国内疫情地图可视化"><a href="#3-1-国内疫情地图可视化" class="headerlink" title="3.1 国内疫情地图可视化"></a>3.1 国内疫情地图可视化</h4><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""中国疫情地图可视化"""</span><span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>charts <span class="token keyword">import</span> Map  <span class="token comment" spellcheck="true"># 导入地图的绘制库</span><span class="token keyword">import</span> pyecharts<span class="token punctuation">.</span>options <span class="token keyword">as</span> opts  <span class="token comment" spellcheck="true"># 全局相关的操作</span>china_data_map <span class="token operator">=</span> pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"地区"</span><span class="token punctuation">:</span>china_area<span class="token punctuation">,</span> <span class="token string">"累计确诊"</span><span class="token punctuation">:</span>china_confirm<span class="token punctuation">}</span><span class="token punctuation">)</span>china_data_map <span class="token operator">=</span> china_data_map<span class="token punctuation">.</span>values<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>china_area_map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>china_confirm_map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> china_data_map<span class="token punctuation">:</span>    china_area_map<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    china_confirm_map<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>data_4  <span class="token operator">=</span> zip<span class="token punctuation">(</span>china_area_map<span class="token punctuation">,</span> china_confirm_map<span class="token punctuation">)</span>map <span class="token operator">=</span> <span class="token punctuation">(</span>    Map<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"中国疫情地图"</span><span class="token punctuation">,</span> data_4<span class="token punctuation">,</span> <span class="token string">"china"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>        title_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"中国疫情地图"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        visualmap_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>VisualMapOpts<span class="token punctuation">(</span>is_show<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>split_number<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span> is_piecewise<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                                         pos_top<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>                                              pieces<span class="token operator">=</span><span class="token punctuation">[</span>                                                   <span class="token punctuation">{</span><span class="token string">'min'</span><span class="token punctuation">:</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">:</span> <span class="token string">'#7f1818'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  #不指定 max                                                   <span class="token punctuation">{</span><span class="token string">'min'</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">'max'</span><span class="token punctuation">:</span> <span class="token number">10000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                                                   <span class="token punctuation">{</span><span class="token string">'min'</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">'max'</span><span class="token punctuation">:</span> <span class="token number">999</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                                                   <span class="token punctuation">{</span><span class="token string">'min'</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'max'</span><span class="token punctuation">:</span> <span class="token number">499</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                                                   <span class="token punctuation">{</span><span class="token string">'min'</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">'max'</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                                                   <span class="token punctuation">{</span><span class="token string">'min'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'max'</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>    <span class="token punctuation">)</span>map<span class="token punctuation">.</span>render_notebook<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/39.png" alt=""></p><h4 id="3-2-海外疫情地图可视化"><a href="#3-2-海外疫情地图可视化" class="headerlink" title="3.2 海外疫情地图可视化"></a>3.2 海外疫情地图可视化</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> json<span class="token keyword">import</span> requests<span class="token keyword">import</span> jsonpath<span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>charts <span class="token keyword">import</span> Map<span class="token punctuation">,</span>Geo<span class="token keyword">from</span> pyecharts <span class="token keyword">import</span> options <span class="token keyword">as</span> opts<span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>globals <span class="token keyword">import</span> GeoType<span class="token punctuation">,</span>RenderType<span class="token comment" spellcheck="true"># 1.目标网址</span>url <span class="token operator">=</span> <span class="token string">'https://api.inews.qq.com/newsqa/v1/automation/foreign/country/ranklist'</span><span class="token comment" spellcheck="true"># 2.模拟浏览器实现访问url</span>resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>textdata <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 3.从网页源代码中提取数据</span>name <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">"$..name"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>confirm <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">"$..confirm"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>confirm<span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> zip<span class="token punctuation">(</span>name<span class="token punctuation">,</span> confirm<span class="token punctuation">)</span>nameMap <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'Singapore Rep.'</span><span class="token punctuation">:</span> <span class="token string">'新加坡'</span><span class="token punctuation">,</span>    <span class="token string">'Dominican Rep.'</span><span class="token punctuation">:</span> <span class="token string">'多米尼加'</span><span class="token punctuation">,</span>    <span class="token string">'Palestine'</span><span class="token punctuation">:</span> <span class="token string">'巴勒斯坦'</span><span class="token punctuation">,</span>    <span class="token string">'Bahamas'</span><span class="token punctuation">:</span> <span class="token string">'巴哈马'</span><span class="token punctuation">,</span>    <span class="token string">'Timor-Leste'</span><span class="token punctuation">:</span> <span class="token string">'东帝汶'</span><span class="token punctuation">,</span>    <span class="token string">'Afghanistan'</span><span class="token punctuation">:</span> <span class="token string">'阿富汗'</span><span class="token punctuation">,</span>    <span class="token string">'Guinea-Bissau'</span><span class="token punctuation">:</span> <span class="token string">'几内亚比绍'</span><span class="token punctuation">,</span>    <span class="token string">"Côte d'Ivoire"</span><span class="token punctuation">:</span> <span class="token string">'科特迪瓦'</span><span class="token punctuation">,</span>    <span class="token string">'Siachen Glacier'</span><span class="token punctuation">:</span> <span class="token string">'锡亚琴冰川'</span><span class="token punctuation">,</span>    <span class="token string">"Br. Indian Ocean Ter."</span><span class="token punctuation">:</span> <span class="token string">'英属印度洋领土'</span><span class="token punctuation">,</span>    <span class="token string">'Angola'</span><span class="token punctuation">:</span> <span class="token string">'安哥拉'</span><span class="token punctuation">,</span>    <span class="token string">'Albania'</span><span class="token punctuation">:</span> <span class="token string">'阿尔巴尼亚'</span><span class="token punctuation">,</span>    <span class="token string">'United Arab Emirates'</span><span class="token punctuation">:</span> <span class="token string">'阿联酋'</span><span class="token punctuation">,</span>    <span class="token string">'Argentina'</span><span class="token punctuation">:</span> <span class="token string">'阿根廷'</span><span class="token punctuation">,</span>    <span class="token string">'Armenia'</span><span class="token punctuation">:</span> <span class="token string">'亚美尼亚'</span><span class="token punctuation">,</span>    <span class="token string">'French Southern and Antarctic Lands'</span><span class="token punctuation">:</span> <span class="token string">'法属南半球和南极领地'</span><span class="token punctuation">,</span>    <span class="token string">'Australia'</span><span class="token punctuation">:</span> <span class="token string">'澳大利亚'</span><span class="token punctuation">,</span>    <span class="token string">'Austria'</span><span class="token punctuation">:</span> <span class="token string">'奥地利'</span><span class="token punctuation">,</span>    <span class="token string">'Azerbaijan'</span><span class="token punctuation">:</span> <span class="token string">'阿塞拜疆'</span><span class="token punctuation">,</span>    <span class="token string">'Burundi'</span><span class="token punctuation">:</span> <span class="token string">'布隆迪'</span><span class="token punctuation">,</span>    <span class="token string">'Belgium'</span><span class="token punctuation">:</span> <span class="token string">'比利时'</span><span class="token punctuation">,</span>    <span class="token string">'Benin'</span><span class="token punctuation">:</span> <span class="token string">'贝宁'</span><span class="token punctuation">,</span>    <span class="token string">'Burkina Faso'</span><span class="token punctuation">:</span> <span class="token string">'布基纳法索'</span><span class="token punctuation">,</span>    <span class="token string">'Bangladesh'</span><span class="token punctuation">:</span> <span class="token string">'孟加拉国'</span><span class="token punctuation">,</span>    <span class="token string">'Bulgaria'</span><span class="token punctuation">:</span> <span class="token string">'保加利亚'</span><span class="token punctuation">,</span>    <span class="token string">'The Bahamas'</span><span class="token punctuation">:</span> <span class="token string">'巴哈马'</span><span class="token punctuation">,</span>    <span class="token string">'Bosnia and Herz.'</span><span class="token punctuation">:</span> <span class="token string">'波斯尼亚和黑塞哥维那'</span><span class="token punctuation">,</span>    <span class="token string">'Belarus'</span><span class="token punctuation">:</span> <span class="token string">'白俄罗斯'</span><span class="token punctuation">,</span>    <span class="token string">'Belize'</span><span class="token punctuation">:</span> <span class="token string">'伯利兹'</span><span class="token punctuation">,</span>    <span class="token string">'Bermuda'</span><span class="token punctuation">:</span> <span class="token string">'百慕大'</span><span class="token punctuation">,</span>    <span class="token string">'Bolivia'</span><span class="token punctuation">:</span> <span class="token string">'玻利维亚'</span><span class="token punctuation">,</span>    <span class="token string">'Brazil'</span><span class="token punctuation">:</span> <span class="token string">'巴西'</span><span class="token punctuation">,</span>    <span class="token string">'Brunei'</span><span class="token punctuation">:</span> <span class="token string">'文莱'</span><span class="token punctuation">,</span>    <span class="token string">'Bhutan'</span><span class="token punctuation">:</span> <span class="token string">'不丹'</span><span class="token punctuation">,</span>    <span class="token string">'Botswana'</span><span class="token punctuation">:</span> <span class="token string">'博茨瓦纳'</span><span class="token punctuation">,</span>    <span class="token string">'Central African Rep.'</span><span class="token punctuation">:</span> <span class="token string">'中非共和国'</span><span class="token punctuation">,</span>    <span class="token string">'Canada'</span><span class="token punctuation">:</span> <span class="token string">'加拿大'</span><span class="token punctuation">,</span>    <span class="token string">'Switzerland'</span><span class="token punctuation">:</span> <span class="token string">'瑞士'</span><span class="token punctuation">,</span>    <span class="token string">'Chile'</span><span class="token punctuation">:</span> <span class="token string">'智利'</span><span class="token punctuation">,</span>    <span class="token string">'China'</span><span class="token punctuation">:</span> <span class="token string">'中国'</span><span class="token punctuation">,</span>    <span class="token string">'Ivory Coast'</span><span class="token punctuation">:</span> <span class="token string">'象牙海岸'</span><span class="token punctuation">,</span>    <span class="token string">'Cameroon'</span><span class="token punctuation">:</span> <span class="token string">'喀麦隆'</span><span class="token punctuation">,</span>    <span class="token string">'Dem. Rep. Congo'</span><span class="token punctuation">:</span> <span class="token string">'刚果（金）'</span><span class="token punctuation">,</span>    <span class="token string">'Congo'</span><span class="token punctuation">:</span> <span class="token string">'刚果（布）'</span><span class="token punctuation">,</span>    <span class="token string">'Colombia'</span><span class="token punctuation">:</span> <span class="token string">'哥伦比亚'</span><span class="token punctuation">,</span>    <span class="token string">'Costa Rica'</span><span class="token punctuation">:</span> <span class="token string">'哥斯达黎加'</span><span class="token punctuation">,</span>    <span class="token string">'Cuba'</span><span class="token punctuation">:</span> <span class="token string">'古巴'</span><span class="token punctuation">,</span>    <span class="token string">'N. Cyprus'</span><span class="token punctuation">:</span> <span class="token string">'北塞浦路斯'</span><span class="token punctuation">,</span>    <span class="token string">'Cyprus'</span><span class="token punctuation">:</span> <span class="token string">'塞浦路斯'</span><span class="token punctuation">,</span>    <span class="token string">'Czech Rep.'</span><span class="token punctuation">:</span> <span class="token string">'捷克'</span><span class="token punctuation">,</span>    <span class="token string">'Germany'</span><span class="token punctuation">:</span> <span class="token string">'德国'</span><span class="token punctuation">,</span>    <span class="token string">'Djibouti'</span><span class="token punctuation">:</span> <span class="token string">'吉布提'</span><span class="token punctuation">,</span>    <span class="token string">'Denmark'</span><span class="token punctuation">:</span> <span class="token string">'丹麦'</span><span class="token punctuation">,</span>    <span class="token string">'Algeria'</span><span class="token punctuation">:</span> <span class="token string">'阿尔及利亚'</span><span class="token punctuation">,</span>    <span class="token string">'Ecuador'</span><span class="token punctuation">:</span> <span class="token string">'厄瓜多尔'</span><span class="token punctuation">,</span>    <span class="token string">'Egypt'</span><span class="token punctuation">:</span> <span class="token string">'埃及'</span><span class="token punctuation">,</span>    <span class="token string">'Eritrea'</span><span class="token punctuation">:</span> <span class="token string">'厄立特里亚'</span><span class="token punctuation">,</span>    <span class="token string">'Spain'</span><span class="token punctuation">:</span> <span class="token string">'西班牙'</span><span class="token punctuation">,</span>    <span class="token string">'Estonia'</span><span class="token punctuation">:</span> <span class="token string">'爱沙尼亚'</span><span class="token punctuation">,</span>    <span class="token string">'Ethiopia'</span><span class="token punctuation">:</span> <span class="token string">'埃塞俄比亚'</span><span class="token punctuation">,</span>    <span class="token string">'Finland'</span><span class="token punctuation">:</span> <span class="token string">'芬兰'</span><span class="token punctuation">,</span>    <span class="token string">'Fiji'</span><span class="token punctuation">:</span> <span class="token string">'斐'</span><span class="token punctuation">,</span>    <span class="token string">'Falkland Islands'</span><span class="token punctuation">:</span> <span class="token string">'福克兰群岛'</span><span class="token punctuation">,</span>    <span class="token string">'France'</span><span class="token punctuation">:</span> <span class="token string">'法国'</span><span class="token punctuation">,</span>    <span class="token string">'Gabon'</span><span class="token punctuation">:</span> <span class="token string">'加蓬'</span><span class="token punctuation">,</span>    <span class="token string">'United Kingdom'</span><span class="token punctuation">:</span> <span class="token string">'英国'</span><span class="token punctuation">,</span>    <span class="token string">'Georgia'</span><span class="token punctuation">:</span> <span class="token string">'格鲁吉亚'</span><span class="token punctuation">,</span>    <span class="token string">'Ghana'</span><span class="token punctuation">:</span> <span class="token string">'加纳'</span><span class="token punctuation">,</span>    <span class="token string">'Guinea'</span><span class="token punctuation">:</span> <span class="token string">'几内亚'</span><span class="token punctuation">,</span>    <span class="token string">'Gambia'</span><span class="token punctuation">:</span> <span class="token string">'冈比亚'</span><span class="token punctuation">,</span>    <span class="token string">'Guinea Bissau'</span><span class="token punctuation">:</span> <span class="token string">'几内亚比绍'</span><span class="token punctuation">,</span>    <span class="token string">'Eq. Guinea'</span><span class="token punctuation">:</span> <span class="token string">'赤道几内亚'</span><span class="token punctuation">,</span>    <span class="token string">'Greece'</span><span class="token punctuation">:</span> <span class="token string">'希腊'</span><span class="token punctuation">,</span>    <span class="token string">'Greenland'</span><span class="token punctuation">:</span> <span class="token string">'格陵兰'</span><span class="token punctuation">,</span>    <span class="token string">'Guatemala'</span><span class="token punctuation">:</span> <span class="token string">'危地马拉'</span><span class="token punctuation">,</span>    <span class="token string">'French Guiana'</span><span class="token punctuation">:</span> <span class="token string">'法属圭亚那'</span><span class="token punctuation">,</span>    <span class="token string">'Guyana'</span><span class="token punctuation">:</span> <span class="token string">'圭亚那'</span><span class="token punctuation">,</span>    <span class="token string">'Honduras'</span><span class="token punctuation">:</span> <span class="token string">'洪都拉斯'</span><span class="token punctuation">,</span>    <span class="token string">'Croatia'</span><span class="token punctuation">:</span> <span class="token string">'克罗地亚'</span><span class="token punctuation">,</span>    <span class="token string">'Haiti'</span><span class="token punctuation">:</span> <span class="token string">'海地'</span><span class="token punctuation">,</span>    <span class="token string">'Hungary'</span><span class="token punctuation">:</span> <span class="token string">'匈牙利'</span><span class="token punctuation">,</span>    <span class="token string">'Indonesia'</span><span class="token punctuation">:</span> <span class="token string">'印度尼西亚'</span><span class="token punctuation">,</span>    <span class="token string">'India'</span><span class="token punctuation">:</span> <span class="token string">'印度'</span><span class="token punctuation">,</span>    <span class="token string">'Ireland'</span><span class="token punctuation">:</span> <span class="token string">'爱尔兰'</span><span class="token punctuation">,</span>    <span class="token string">'Iran'</span><span class="token punctuation">:</span> <span class="token string">'伊朗'</span><span class="token punctuation">,</span>    <span class="token string">'Iraq'</span><span class="token punctuation">:</span> <span class="token string">'伊拉克'</span><span class="token punctuation">,</span>    <span class="token string">'Iceland'</span><span class="token punctuation">:</span> <span class="token string">'冰岛'</span><span class="token punctuation">,</span>    <span class="token string">'Israel'</span><span class="token punctuation">:</span> <span class="token string">'以色列'</span><span class="token punctuation">,</span>    <span class="token string">'Italy'</span><span class="token punctuation">:</span> <span class="token string">'意大利'</span><span class="token punctuation">,</span>    <span class="token string">'Jamaica'</span><span class="token punctuation">:</span> <span class="token string">'牙买加'</span><span class="token punctuation">,</span>    <span class="token string">'Jordan'</span><span class="token punctuation">:</span> <span class="token string">'约旦'</span><span class="token punctuation">,</span>    <span class="token string">'Japan'</span><span class="token punctuation">:</span> <span class="token string">'日本'</span><span class="token punctuation">,</span>    <span class="token string">'Japan'</span><span class="token punctuation">:</span> <span class="token string">'日本本土'</span><span class="token punctuation">,</span>    <span class="token string">'Kazakhstan'</span><span class="token punctuation">:</span> <span class="token string">'哈萨克斯坦'</span><span class="token punctuation">,</span>    <span class="token string">'Kenya'</span><span class="token punctuation">:</span> <span class="token string">'肯尼亚'</span><span class="token punctuation">,</span>    <span class="token string">'Kyrgyzstan'</span><span class="token punctuation">:</span> <span class="token string">'吉尔吉斯斯坦'</span><span class="token punctuation">,</span>    <span class="token string">'Cambodia'</span><span class="token punctuation">:</span> <span class="token string">'柬埔寨'</span><span class="token punctuation">,</span>    <span class="token string">'Korea'</span><span class="token punctuation">:</span> <span class="token string">'韩国'</span><span class="token punctuation">,</span>    <span class="token string">'Kosovo'</span><span class="token punctuation">:</span> <span class="token string">'科索沃'</span><span class="token punctuation">,</span>    <span class="token string">'Kuwait'</span><span class="token punctuation">:</span> <span class="token string">'科威特'</span><span class="token punctuation">,</span>    <span class="token string">'Lao PDR'</span><span class="token punctuation">:</span> <span class="token string">'老挝'</span><span class="token punctuation">,</span>    <span class="token string">'Lebanon'</span><span class="token punctuation">:</span> <span class="token string">'黎巴嫩'</span><span class="token punctuation">,</span>    <span class="token string">'Liberia'</span><span class="token punctuation">:</span> <span class="token string">'利比里亚'</span><span class="token punctuation">,</span>    <span class="token string">'Libya'</span><span class="token punctuation">:</span> <span class="token string">'利比亚'</span><span class="token punctuation">,</span>    <span class="token string">'Sri Lanka'</span><span class="token punctuation">:</span> <span class="token string">'斯里兰卡'</span><span class="token punctuation">,</span>    <span class="token string">'Lesotho'</span><span class="token punctuation">:</span> <span class="token string">'莱索托'</span><span class="token punctuation">,</span>    <span class="token string">'Lithuania'</span><span class="token punctuation">:</span> <span class="token string">'立陶宛'</span><span class="token punctuation">,</span>    <span class="token string">'Luxembourg'</span><span class="token punctuation">:</span> <span class="token string">'卢森堡'</span><span class="token punctuation">,</span>    <span class="token string">'Latvia'</span><span class="token punctuation">:</span> <span class="token string">'拉脱维亚'</span><span class="token punctuation">,</span>    <span class="token string">'Morocco'</span><span class="token punctuation">:</span> <span class="token string">'摩洛哥'</span><span class="token punctuation">,</span>    <span class="token string">'Moldova'</span><span class="token punctuation">:</span> <span class="token string">'摩尔多瓦'</span><span class="token punctuation">,</span>    <span class="token string">'Madagascar'</span><span class="token punctuation">:</span> <span class="token string">'马达加斯加'</span><span class="token punctuation">,</span>    <span class="token string">'Mexico'</span><span class="token punctuation">:</span> <span class="token string">'墨西哥'</span><span class="token punctuation">,</span>    <span class="token string">'Macedonia'</span><span class="token punctuation">:</span> <span class="token string">'马其顿'</span><span class="token punctuation">,</span>    <span class="token string">'Mali'</span><span class="token punctuation">:</span> <span class="token string">'马里'</span><span class="token punctuation">,</span>    <span class="token string">'Myanmar'</span><span class="token punctuation">:</span> <span class="token string">'缅甸'</span><span class="token punctuation">,</span>    <span class="token string">'Montenegro'</span><span class="token punctuation">:</span> <span class="token string">'黑山'</span><span class="token punctuation">,</span>    <span class="token string">'Mongolia'</span><span class="token punctuation">:</span> <span class="token string">'蒙古'</span><span class="token punctuation">,</span>    <span class="token string">'Mozambique'</span><span class="token punctuation">:</span> <span class="token string">'莫桑比克'</span><span class="token punctuation">,</span>    <span class="token string">'Mauritania'</span><span class="token punctuation">:</span> <span class="token string">'毛里塔尼亚'</span><span class="token punctuation">,</span>    <span class="token string">'Malawi'</span><span class="token punctuation">:</span> <span class="token string">'马拉维'</span><span class="token punctuation">,</span>    <span class="token string">'Malaysia'</span><span class="token punctuation">:</span> <span class="token string">'马来西亚'</span><span class="token punctuation">,</span>    <span class="token string">'Namibia'</span><span class="token punctuation">:</span> <span class="token string">'纳米比亚'</span><span class="token punctuation">,</span>    <span class="token string">'New Caledonia'</span><span class="token punctuation">:</span> <span class="token string">'新喀里多尼亚'</span><span class="token punctuation">,</span>    <span class="token string">'Niger'</span><span class="token punctuation">:</span> <span class="token string">'尼日尔'</span><span class="token punctuation">,</span>    <span class="token string">'Nigeria'</span><span class="token punctuation">:</span> <span class="token string">'尼日利亚'</span><span class="token punctuation">,</span>    <span class="token string">'Nicaragua'</span><span class="token punctuation">:</span> <span class="token string">'尼加拉瓜'</span><span class="token punctuation">,</span>    <span class="token string">'Netherlands'</span><span class="token punctuation">:</span> <span class="token string">'荷兰'</span><span class="token punctuation">,</span>    <span class="token string">'Norway'</span><span class="token punctuation">:</span> <span class="token string">'挪威'</span><span class="token punctuation">,</span>    <span class="token string">'Nepal'</span><span class="token punctuation">:</span> <span class="token string">'尼泊尔'</span><span class="token punctuation">,</span>    <span class="token string">'New Zealand'</span><span class="token punctuation">:</span> <span class="token string">'新西兰'</span><span class="token punctuation">,</span>    <span class="token string">'Oman'</span><span class="token punctuation">:</span> <span class="token string">'阿曼'</span><span class="token punctuation">,</span>    <span class="token string">'Pakistan'</span><span class="token punctuation">:</span> <span class="token string">'巴基斯坦'</span><span class="token punctuation">,</span>    <span class="token string">'Panama'</span><span class="token punctuation">:</span> <span class="token string">'巴拿马'</span><span class="token punctuation">,</span>    <span class="token string">'Peru'</span><span class="token punctuation">:</span> <span class="token string">'秘鲁'</span><span class="token punctuation">,</span>    <span class="token string">'Philippines'</span><span class="token punctuation">:</span> <span class="token string">'菲律宾'</span><span class="token punctuation">,</span>    <span class="token string">'Papua New Guinea'</span><span class="token punctuation">:</span> <span class="token string">'巴布亚新几内亚'</span><span class="token punctuation">,</span>    <span class="token string">'Poland'</span><span class="token punctuation">:</span> <span class="token string">'波兰'</span><span class="token punctuation">,</span>    <span class="token string">'Puerto Rico'</span><span class="token punctuation">:</span> <span class="token string">'波多黎各'</span><span class="token punctuation">,</span>    <span class="token string">'Dem. Rep. Korea'</span><span class="token punctuation">:</span> <span class="token string">'朝鲜'</span><span class="token punctuation">,</span>    <span class="token string">'Portugal'</span><span class="token punctuation">:</span> <span class="token string">'葡萄牙'</span><span class="token punctuation">,</span>    <span class="token string">'Paraguay'</span><span class="token punctuation">:</span> <span class="token string">'巴拉圭'</span><span class="token punctuation">,</span>    <span class="token string">'Qatar'</span><span class="token punctuation">:</span> <span class="token string">'卡塔尔'</span><span class="token punctuation">,</span>    <span class="token string">'Romania'</span><span class="token punctuation">:</span> <span class="token string">'罗马尼亚'</span><span class="token punctuation">,</span>    <span class="token string">'Russia'</span><span class="token punctuation">:</span> <span class="token string">'俄罗斯'</span><span class="token punctuation">,</span>    <span class="token string">'Rwanda'</span><span class="token punctuation">:</span> <span class="token string">'卢旺达'</span><span class="token punctuation">,</span>    <span class="token string">'W. Sahara'</span><span class="token punctuation">:</span> <span class="token string">'西撒哈拉'</span><span class="token punctuation">,</span>    <span class="token string">'Saudi Arabia'</span><span class="token punctuation">:</span> <span class="token string">'沙特阿拉伯'</span><span class="token punctuation">,</span>    <span class="token string">'Sudan'</span><span class="token punctuation">:</span> <span class="token string">'苏丹'</span><span class="token punctuation">,</span>    <span class="token string">'S. Sudan'</span><span class="token punctuation">:</span> <span class="token string">'南苏丹'</span><span class="token punctuation">,</span>    <span class="token string">'Senegal'</span><span class="token punctuation">:</span> <span class="token string">'塞内加尔'</span><span class="token punctuation">,</span>    <span class="token string">'Solomon Is.'</span><span class="token punctuation">:</span> <span class="token string">'所罗门群岛'</span><span class="token punctuation">,</span>    <span class="token string">'Sierra Leone'</span><span class="token punctuation">:</span> <span class="token string">'塞拉利昂'</span><span class="token punctuation">,</span>    <span class="token string">'El Salvador'</span><span class="token punctuation">:</span> <span class="token string">'萨尔瓦多'</span><span class="token punctuation">,</span>    <span class="token string">'Somaliland'</span><span class="token punctuation">:</span> <span class="token string">'索马里兰'</span><span class="token punctuation">,</span>    <span class="token string">'Somalia'</span><span class="token punctuation">:</span> <span class="token string">'索马里'</span><span class="token punctuation">,</span>    <span class="token string">'Serbia'</span><span class="token punctuation">:</span> <span class="token string">'塞尔维亚'</span><span class="token punctuation">,</span>    <span class="token string">'Suriname'</span><span class="token punctuation">:</span> <span class="token string">'苏里南'</span><span class="token punctuation">,</span>    <span class="token string">'Slovakia'</span><span class="token punctuation">:</span> <span class="token string">'斯洛伐克'</span><span class="token punctuation">,</span>    <span class="token string">'Slovenia'</span><span class="token punctuation">:</span> <span class="token string">'斯洛文尼亚'</span><span class="token punctuation">,</span>    <span class="token string">'Sweden'</span><span class="token punctuation">:</span> <span class="token string">'瑞典'</span><span class="token punctuation">,</span>    <span class="token string">'Swaziland'</span><span class="token punctuation">:</span> <span class="token string">'斯威士兰'</span><span class="token punctuation">,</span>    <span class="token string">'Syria'</span><span class="token punctuation">:</span> <span class="token string">'叙利亚'</span><span class="token punctuation">,</span>    <span class="token string">'Chad'</span><span class="token punctuation">:</span> <span class="token string">'乍得'</span><span class="token punctuation">,</span>    <span class="token string">'Togo'</span><span class="token punctuation">:</span> <span class="token string">'多哥'</span><span class="token punctuation">,</span>    <span class="token string">'Thailand'</span><span class="token punctuation">:</span> <span class="token string">'泰国'</span><span class="token punctuation">,</span>    <span class="token string">'Tajikistan'</span><span class="token punctuation">:</span> <span class="token string">'塔吉克斯坦'</span><span class="token punctuation">,</span>    <span class="token string">'Turkmenistan'</span><span class="token punctuation">:</span> <span class="token string">'土库曼斯坦'</span><span class="token punctuation">,</span>    <span class="token string">'East Timor'</span><span class="token punctuation">:</span> <span class="token string">'东帝汶'</span><span class="token punctuation">,</span>    <span class="token string">'Trinidad and Tobago'</span><span class="token punctuation">:</span> <span class="token string">'特里尼达和多巴哥'</span><span class="token punctuation">,</span>    <span class="token string">'Tunisia'</span><span class="token punctuation">:</span> <span class="token string">'突尼斯'</span><span class="token punctuation">,</span>    <span class="token string">'Turkey'</span><span class="token punctuation">:</span> <span class="token string">'土耳其'</span><span class="token punctuation">,</span>    <span class="token string">'Tanzania'</span><span class="token punctuation">:</span> <span class="token string">'坦桑尼亚'</span><span class="token punctuation">,</span>    <span class="token string">'Uganda'</span><span class="token punctuation">:</span> <span class="token string">'乌干达'</span><span class="token punctuation">,</span>    <span class="token string">'Ukraine'</span><span class="token punctuation">:</span> <span class="token string">'乌克兰'</span><span class="token punctuation">,</span>    <span class="token string">'Uruguay'</span><span class="token punctuation">:</span> <span class="token string">'乌拉圭'</span><span class="token punctuation">,</span>    <span class="token string">'United States'</span><span class="token punctuation">:</span> <span class="token string">'美国'</span><span class="token punctuation">,</span>    <span class="token string">'Uzbekistan'</span><span class="token punctuation">:</span> <span class="token string">'乌兹别克斯坦'</span><span class="token punctuation">,</span>    <span class="token string">'Venezuela'</span><span class="token punctuation">:</span> <span class="token string">'委内瑞拉'</span><span class="token punctuation">,</span>    <span class="token string">'Vietnam'</span><span class="token punctuation">:</span> <span class="token string">'越南'</span><span class="token punctuation">,</span>    <span class="token string">'Vanuatu'</span><span class="token punctuation">:</span> <span class="token string">'瓦努阿图'</span><span class="token punctuation">,</span>    <span class="token string">'West Bank'</span><span class="token punctuation">:</span> <span class="token string">'西岸'</span><span class="token punctuation">,</span>    <span class="token string">'Yemen'</span><span class="token punctuation">:</span> <span class="token string">'也门'</span><span class="token punctuation">,</span>    <span class="token string">'South Africa'</span><span class="token punctuation">:</span> <span class="token string">'南非'</span><span class="token punctuation">,</span>    <span class="token string">'Zambia'</span><span class="token punctuation">:</span> <span class="token string">'赞比亚'</span><span class="token punctuation">,</span>    <span class="token string">'Zimbabwe'</span><span class="token punctuation">:</span> <span class="token string">'津巴布韦'</span><span class="token punctuation">}</span>map_ <span class="token operator">=</span> Map<span class="token punctuation">(</span>opts<span class="token punctuation">.</span>InitOpts<span class="token punctuation">(</span>width<span class="token operator">=</span><span class="token string">'1200px'</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token string">'600px'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add<span class="token punctuation">(</span>series_name<span class="token operator">=</span><span class="token string">"累计确诊"</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 设置提示框标签</span>                 data_pair<span class="token operator">=</span>a<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 输入数据</span>                 maptype<span class="token operator">=</span><span class="token string">"world"</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 设置地图类型为世界地图</span>                 name_map<span class="token operator">=</span>nameMap<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 添加映射</span>                 is_map_symbol_show<span class="token operator">=</span><span class="token boolean">False</span>  <span class="token comment" spellcheck="true"># 不显示标记点</span>                 <span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置系列配置项</span>map_<span class="token punctuation">.</span>set_series_opts<span class="token punctuation">(</span>label_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>LabelOpts<span class="token punctuation">(</span>is_show<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 不显示国家名称</span><span class="token comment" spellcheck="true"># 设置全局配置项</span>map_<span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>title_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"海外疫情情况"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 设置图标题</span>                    visualmap_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>VisualMapOpts<span class="token punctuation">(</span>max_<span class="token operator">=</span><span class="token number">1000000</span><span class="token punctuation">,</span> is_piecewise<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 显示图例</span>map_<span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>title_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"国外疫情情况"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 设置图标题</span>                     visualmap_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>VisualMapOpts<span class="token punctuation">(</span>pieces<span class="token operator">=</span><span class="token punctuation">[</span>  <span class="token comment" spellcheck="true"># 自定义分组的分店和颜色</span>                             <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">900000</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#800000"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                             <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">50000</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">500000</span><span class="token punctuation">,</span> <span class="token string">"lable"</span><span class="token punctuation">:</span><span class="token string">'0.15~0.19'</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#AA0000"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  # 栗色                             <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">50000</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#CC0000"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  # 耐火砖                             <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#FF0000"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  # 印度红                             <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#FF3333"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  # 玫瑰棕色                             <span class="token punctuation">{</span><span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#FFCCCC"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  # 薄雾玫瑰                     <span class="token punctuation">]</span><span class="token punctuation">,</span>                             is_piecewise<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 显示分段式图例</span>map_<span class="token punctuation">.</span>render_notebook<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/40.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10行代码爬取腾讯新闻疫情历史数据</title>
      <link href="/2020/08/18/10-xing-dai-ma-pa-qu-teng-xun-xin-wen-yi-qing-li-shi-shu-ju/"/>
      <url>/2020/08/18/10-xing-dai-ma-pa-qu-teng-xun-xin-wen-yi-qing-li-shi-shu-ju/</url>
      
        <content type="html"><![CDATA[<h3 id="废话不说，直接上代码"><a href="#废话不说，直接上代码" class="headerlink" title="废话不说，直接上代码"></a>废话不说，直接上代码</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span>pandasurl <span class="token operator">=</span> <span class="token string">"https://api.inews.qq.com/newsqa/v1/query/inner/publish/modules/list?modules=chinaDayList,chinaDayAddList,cityStatis,nowConfirmStatis,provinceCompare"</span>url_list <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"chinaDayAddList"</span><span class="token punctuation">]</span>  data_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"date"</span><span class="token punctuation">,</span> <span class="token string">"confirm"</span><span class="token punctuation">,</span> <span class="token string">"suspect"</span><span class="token punctuation">,</span> <span class="token string">"dead"</span><span class="token punctuation">,</span> <span class="token string">"heal"</span><span class="token punctuation">,</span> <span class="token string">"importedCase"</span><span class="token punctuation">,</span> <span class="token string">"deadRate"</span><span class="token punctuation">,</span> <span class="token string">"healRate"</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> data_list<span class="token punctuation">:</span>    locals<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> url_list<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> data_list<span class="token punctuation">:</span>        locals<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>china_data <span class="token operator">=</span> pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"日期"</span><span class="token punctuation">:</span> date<span class="token punctuation">,</span> <span class="token string">"新增确诊"</span><span class="token punctuation">:</span> confirm<span class="token punctuation">,</span> <span class="token string">"疑似病例"</span><span class="token punctuation">:</span> suspect<span class="token punctuation">,</span><span class="token string">"新增死亡"</span><span class="token punctuation">:</span> dead<span class="token punctuation">,</span><span class="token string">"新增治愈"</span><span class="token punctuation">:</span> heal<span class="token punctuation">,</span>                               <span class="token string">"境外输入"</span><span class="token punctuation">:</span> importedCase<span class="token punctuation">,</span><span class="token string">"死亡率"</span><span class="token punctuation">:</span> deadRate<span class="token punctuation">,</span> <span class="token string">"治愈率"</span><span class="token punctuation">:</span> healRate<span class="token punctuation">}</span><span class="token punctuation">)</span>china_data<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">"./china_data.csv"</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><h3 id="数据框china-data的执行结果"><a href="#数据框china-data的执行结果" class="headerlink" title="数据框china_data的执行结果"></a>数据框china_data的执行结果</h3><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/100.png" alt=""></p><h3 id="csv文件截图"><a href="#csv文件截图" class="headerlink" title="csv文件截图"></a>csv文件截图</h3><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/101.png" alt=""></p><h3 id="问题叙述"><a href="#问题叙述" class="headerlink" title="问题叙述"></a>问题叙述</h3><ol><li>这里由于官方的日期格式是以3.04这种小数格式存储，这里没有执行优化操作，在china_data数据框中输出正常，但在csv文件中最后一位小数为0会被省略，例如：data_china数据框中是7.10表示7月10日，而csv中显示为7.1，也就是说，在csv中7.1表示7月10日而7.01才表示7月1日</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客的恢复</title>
      <link href="/2020/08/18/hexo-bo-ke-hui-fu/"/>
      <url>/2020/08/18/hexo-bo-ke-hui-fu/</url>
      
        <content type="html"><![CDATA[<h3 id="1-博客恢复"><a href="#1-博客恢复" class="headerlink" title="1. 博客恢复"></a>1. 博客恢复</h3><ol><li><p>说明：这里博客的恢复是基于你之前备份了博客且每次添加文章之前都备份到GitHub的备份分支中</p></li><li><p>这里GitHub中有两个分支：backup和master，前者用于备份博客后者用于生成博客静态文件，其中以将backup设置为默认分支</p><ul><li><p>安装好git、nodejs、npm、hexo</p></li><li><p>克隆博客</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/DedicationTechnology/DedicationTechnology.github.io.git blog</code></pre></li><li><p>进入本地的博客目录(这里就是上面目录创建的blog目录)然后利用package.json文件安装相关的插件</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span></code></pre></li></ul></li></ol><h3 id="2-正常博客的备份和发表顺序-以下命令都在backup分支下进行"><a href="#2-正常博客的备份和发表顺序-以下命令都在backup分支下进行" class="headerlink" title="2. 正常博客的备份和发表顺序(以下命令都在backup分支下进行)"></a>2. 正常博客的备份和发表顺序(以下命令都在backup分支下进行)</h3><pre class=" language-bash"><code class="language-bash">hexo n <span class="token comment" spellcheck="true"># 生成一个新的博客</span><span class="token function">git</span> add  <span class="token comment" spellcheck="true"># 添加到本地工作台</span><span class="token function">git</span> commit -m <span class="token string">""</span>  <span class="token comment" spellcheck="true"># 添加到本地仓库</span><span class="token function">git</span> push origin backup  <span class="token comment" spellcheck="true"># 上传到github仓库中的备份分支backup中</span>hexo cleanhexo g  <span class="token comment" spellcheck="true"># 生成博客文件</span>hexo s  <span class="token comment" spellcheck="true"># 开启本地博客预览</span>hexo d  <span class="token comment" spellcheck="true"># 上传博客静态文件到GitHub</span></code></pre><h3 id="3-mac下安装需要在root下进行，否则在安装hexo时会报错"><a href="#3-mac下安装需要在root下进行，否则在安装hexo时会报错" class="headerlink" title="3. mac下安装需要在root下进行，否则在安装hexo时会报错"></a>3. mac下安装需要在root下进行，否则在安装hexo时会报错</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pycharm永久激活</title>
      <link href="/2020/08/09/pycharm-yong-jiu-ji-huo/"/>
      <url>/2020/08/09/pycharm-yong-jiu-ji-huo/</url>
      
        <content type="html"><![CDATA[<h4 id="1-说明"><a href="#1-说明" class="headerlink" title="1. 说明"></a>1. 说明</h4><blockquote><p>本人亲测该永久激活方法适用于pycharm 2020.1.2版本，其它版本没有测试无法知晓是否能够成功</p></blockquote><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/61.jpg" alt=""></p><h4 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2. 步骤"></a>2. 步骤</h4><ol><li><p>下载激活插件</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/1e4nZaVfaZhUxTpk2P4CxfQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1e4nZaVfaZhUxTpk2P4CxfQ</a> </p><p>提取码：a0b7</p><p>说明：这里的安装包不需要解压缩，直接下载即可</p></blockquote><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/62.jpg" alt=""></p></li><li><p>打开pycharm</p><blockquote><p>说明：这里为防止意外，建议卸载原先可能装有破解插件的pycharm，重新在官方下载pycharm</p><p>步骤：下载完毕后打开进行安装，然后选用免费使用30天的选项进入到如下的界面</p></blockquote><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/63.jpg" alt=""></p><blockquote><p>说明：这张图是在网上随便找的一张图，可能版本不对但旨在说明进入该界面</p></blockquote></li><li><p>将下载的插件直接拖入到该界面</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/68.jpg" alt=""></p></li><li><p>这时会出现安装插件的界面，直接点击安装就可以了</p></li><li><p>安装完毕后创建工程进入pycharm，查看是否永久激活</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/60.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/65.jpg" alt=""></p></li><li><p>推荐不勾选自动更新的选项，防止更新后插件无法使用需要重新激活</p></li></ol><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/67.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 永久激活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 永久激活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谷歌浏览器不能科学上网</title>
      <link href="/2020/08/08/gu-ge-liu-lan-qi-bu-neng-ke-xue-shang-wang/"/>
      <url>/2020/08/08/gu-ge-liu-lan-qi-bu-neng-ke-xue-shang-wang/</url>
      
        <content type="html"><![CDATA[<h4 id="问题说明：突然某个时候chrome浏览器无法科学上网，检查clash这类科学上网软件发现各节点正常，更新订阅后仍然无法上网，但测试各个节点发现延迟都正常"><a href="#问题说明：突然某个时候chrome浏览器无法科学上网，检查clash这类科学上网软件发现各节点正常，更新订阅后仍然无法上网，但测试各个节点发现延迟都正常" class="headerlink" title="问题说明：突然某个时候chrome浏览器无法科学上网，检查clash这类科学上网软件发现各节点正常，更新订阅后仍然无法上网，但测试各个节点发现延迟都正常"></a>问题说明：突然某个时候chrome浏览器无法科学上网，检查clash这类科学上网软件发现各节点正常，更新订阅后仍然无法上网，但测试各个节点发现延迟都正常</h4><ol><li>故障排除：首先打开电脑自带的ie浏览器(这里默认之前使用的是谷歌浏览器)，在地址栏中输入Google.com，如果发现可以显示谷歌搜索的界面就说明是谷歌浏览器设置的问题，如果不能显示则就可能使其它问题，这里讨论可以正常显示的情况</li><li>发现问题：通过故障排除发现是谷歌浏览器的问题，这里进入谷歌浏览器：设置-&gt;高级-&gt;系统-&gt;打开你计算机的代理设置，关闭该项下面的默认代理设置即可</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
            <tag> clash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matplotlib绘图时设置中文标题显示出错的问题</title>
      <link href="/2020/07/10/matplotlib-hui-tu-shi-she-zhi-zhong-wen-biao-ti-xian-shi-chu-cuo-de-wen-ti/"/>
      <url>/2020/07/10/matplotlib-hui-tu-shi-she-zhi-zhong-wen-biao-ti-xian-shi-chu-cuo-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>在代码中输入如下代码即可解决</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#解决中文显示问题</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> 数据可视化 </tag>
            
            <tag> matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>执行load npz时报错：Object arrays cannot be loaded when allow_pickle=False解决方案</title>
      <link href="/2020/07/10/zhi-xing-load-npz-shi-bao-cuo-object-arrays-cannot-be-loaded-when-allow-pickle-false-jie-jue-fang-an/"/>
      <url>/2020/07/10/zhi-xing-load-npz-shi-bao-cuo-object-arrays-cannot-be-loaded-when-allow-pickle-false-jie-jue-fang-an/</url>
      
        <content type="html"><![CDATA[<ol><li>错误说明：np.load() 缺少allow_pickle的权限</li><li>解决途径：在load方法中添加属性(修改allow_pickle为True)；np.load(“npz路径”, allow_pickle = True) </li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> 数据可视化 </tag>
            
            <tag> matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是框架？框架的作用是什么？为什么要学习框架？</title>
      <link href="/2020/07/05/shi-me-shi-kuang-jia-kuang-jia-de-zuo-yong-shi-shi-me-wei-shi-me-yao-xue-xi-kuang-jia/"/>
      <url>/2020/07/05/shi-me-shi-kuang-jia-kuang-jia-de-zuo-yong-shi-shi-me-wei-shi-me-yao-xue-xi-kuang-jia/</url>
      
        <content type="html"><![CDATA[<h3 id="1-什么是框架？"><a href="#1-什么是框架？" class="headerlink" title="1.什么是框架？"></a>1.什么是框架？</h3><blockquote><p>其实框架，就是别人写好了包装起来的一套工具，把你原先必须要写的，必须要做的一些复杂的东西都写好了放在那里，你只要调用他的方法，就可以实现一些本来要费好大劲的功能。形象一点说吧，假如你盖房子，你是自己一砖一瓦的盖简单呢，还是拿一个现成的架子往上面添东西简单呢？结果不言而喻吧，有一个半成品的架子，你只需要添上一些你自己额外需要加的东西就好了。这就是框架的好处。假如，好多好多地方都要用这么一套逻辑，那么我们会定义成一个方法（函数），就免去了写同样代码的麻烦，其实这个方法，就是一个框架啦，只不过非常小而已。</p></blockquote><blockquote><p>web开发的MVC模式，M是模型，V是视图（表现层），C是控制层。框架就是M层啦，他把一套不涉及任何业务相关的东西都写好了包装起来，你去用就可以了，C的控制层，他是没法写的，因为不同的系统有不同的业务逻辑，框架不可能帮你把业务逻辑也写进去啦。就好比你盖房子的架子，他只能做到一个架子，不是因为他不能完全弄好，而是因为他没法去加，他也不知道你到底是需要什么颜色的瓦片，但是相比来看，框架把很多复杂的东西都弄好了，你只要在上面添加你独有的东西就可以了。</p></blockquote><blockquote><p>综上所述，框架可以理解为一个毛坯房，有了这个毛坯房你可以将他装修成自己想要的样子，而不需要再一砖一瓦的去盖房子（省略了你盖房子主体架构这些步骤）。</p></blockquote><h3 id="2-框架的作用是什么？"><a href="#2-框架的作用是什么？" class="headerlink" title="2.框架的作用是什么？"></a>2.框架的作用是什么？</h3><blockquote><p>框架可以帮助省略掉一些基本的相同底层代码的反复书写，只需调用框架的方法就可以实现你想要的功能。</p></blockquote><h3 id="3-为什么要学习框架？"><a href="#3-为什么要学习框架？" class="headerlink" title="3.为什么要学习框架？"></a>3.为什么要学习框架？</h3><blockquote><p>学习框架的目的就是提高项目的编写效率，使你可以有更多的时间去编写属于自己独特的东西，而不需要将大量的时间花费在底层代码的书写上。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>共享打印机出现0x00000569代码解决方案(亲测有效)</title>
      <link href="/2020/07/05/gong-xiang-da-yin-ji-chu-xian-0x00000569-dai-ma-jie-jue-fang-an-qin-ce-you-xiao/"/>
      <url>/2020/07/05/gong-xiang-da-yin-ji-chu-xian-0x00000569-dai-ma-jie-jue-fang-an-qin-ce-you-xiao/</url>
      
        <content type="html"><![CDATA[<h3 id="1-问题说明"><a href="#1-问题说明" class="headerlink" title="1.问题说明"></a>1.问题说明</h3><blockquote><p>共享打印机时出现错误代码0x00000569，其意思是未授予用户在此计算机上的请求登录类型. 这个意思是你没权访问目标主机。</p></blockquote><h3 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2.解决方法"></a>2.解决方法</h3><blockquote><p>1.同时按下菜单键+R键弹出运行框</p><p>2.在运行框中输入“gpedit.msc”，并按下enter键，进入“本地组策略编辑器”</p><p>3.双击“Windows设置”，并双击“安全设置”</p><p>4.进入“安全设置”界面，并双击右边的“本地策略”</p><p>5.进入“本地策略”后选择右边的“用户权限分配”</p><p>6.进入到“用户权限分配”后找到“拒绝从网络访问这台计算机”，右键单击并选择属性</p><p>7.选择guest，点击删除，保存退出即可。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 打印机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打印机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github搭建自己的博客详细教程(转载)</title>
      <link href="/2020/07/05/hexo-github-da-jian-zi-ji-de-bo-ke-xiang-xi-jiao-cheng-zhuan-zai/"/>
      <url>/2020/07/05/hexo-github-da-jian-zi-ji-de-bo-ke-xiang-xi-jiao-cheng-zhuan-zai/</url>
      
        <content type="html"><![CDATA[<p><a href="https://godweiyang.com/2018/04/13/hexo-blog/" target="_blank" rel="noopener">https://godweiyang.com/2018/04/13/hexo-blog/</a> (文章)</p><p><a href="https://www.bilibili.com/video/BV1Yb411a7ty?t=1248" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Yb411a7ty?t=1248</a> (视频)</p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><blockquote><p>hexo d命令报错 ERROR Deployer not found: git</p><p>npm install hexo-deployer-git –save(注意：最后save前有两条杠)</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github+picgo+typora搭建免费图床</title>
      <link href="/2020/07/05/github-picgo-typora-da-jian-mian-fei-tu-chuang/"/>
      <url>/2020/07/05/github-picgo-typora-da-jian-mian-fei-tu-chuang/</url>
      
        <content type="html"><![CDATA[<h4 id="1-搭建目的"><a href="#1-搭建目的" class="headerlink" title="1.搭建目的"></a>1.搭建目的</h4><blockquote><p>由于typora是一款备受好评的markdown编辑器，大多数人选择在typora上编写markdown然后直接复制到其他的平台进行发布：例如CSDN这类博客又或者是自己搭建的博客(比如用hexo框架搭建的)，又或者是直接上传到GitHub中作为笔记。但这些方式都有一个非常大的弊端，那就是在typora上插入的本地图片一旦上传到其他的平台就无法显示，这里搭建github+picgo+typora的目的就是为了解决这些问题。</p></blockquote><h4 id="2-尚未解决的问题"><a href="#2-尚未解决的问题" class="headerlink" title="2.尚未解决的问题"></a>2.尚未解决的问题</h4><blockquote><p>这种github+picgo+typora搭建方法最终得到的图片还无法在CSDN上直接显示，会有防外链的提示，所以在CSDN上发布博客的话目前还是建议直接本地图片上传，在自己搭建的博客或者上传到GitHub上这种方法是可以完美显示图片的。</p></blockquote><h4 id="3-其他方法推荐"><a href="#3-其他方法推荐" class="headerlink" title="3.其他方法推荐"></a>3.其他方法推荐</h4><blockquote><p>如果你不想用这种方法来搭建的话，也可以直接用在线免费的图床上传图片，不过会有一些相关限制，这里推荐一个图床：<a href="https://imgchr.com/" target="_blank" rel="noopener">https://imgchr.com/</a> ，具体操作方法请自行谷歌。</p></blockquote><h4 id="4-搭建步骤"><a href="#4-搭建步骤" class="headerlink" title="4.搭建步骤"></a>4.搭建步骤</h4><ol><li><p>下载picgo：<a href="https://github.com/Molunerfinn/picgo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/picgo/releases</a> ，（请下载2.2.2及以上版本），然后傻瓜式安装即可。</p></li><li><p>配置github仓库</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/4.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/3.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/6.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/5.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/7.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/9.jpg" alt=""></p></li><li><p>配置picgo</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/8.jpg" alt="8"></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/10.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/11.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/12.jpg" alt=""></p></li><li><p>配置typora</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/13.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/14.jpg" alt=""></p><p>最后如果验证成功就表示可以成功上床图片，到这里搭建就全部完成了</p></li><li><p>实操</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/15.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/16.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/17.jpg" alt=""></p><p>到这里，搭建的功能就完成了，现在直接将typora的内容上传到自己搭建的博客或者github上就会显示图片</p><h4 id="5-踩过的坑"><a href="#5-踩过的坑" class="headerlink" title="5.踩过的坑"></a>5.踩过的坑</h4><ol><li><p>你保存的图片不能同名，也就是说github中不能有和你即将在typora粘贴的图片同名的图片，同名会导致上传失败。</p></li><li><p>由于github的不稳定，毕竟服务器在国外，偶尔会出现上传失败的问题，如果经过检查发现不是图片同名的问题可以考虑刷新github，然后重新上传图片，或者过一会在上传</p><p><img src="https://raw.githubusercontent.com/DedicationTechnology/picgo/master/img/18.jpg" alt=""></p></li></ol></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> typora </tag>
            
            <tag> picgo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git中出现error-Your-local-changes-to-the-following-files-would-be-overwritten-by-merge的解决方案</title>
      <link href="/2020/07/05/git-zhong-chu-xian-error-your-local-changes-to-the-following-files-would-be-overwritten-by-merge-de-jie-jue-fang-an/"/>
      <url>/2020/07/05/git-zhong-chu-xian-error-your-local-changes-to-the-following-files-would-be-overwritten-by-merge-de-jie-jue-fang-an/</url>
      
        <content type="html"><![CDATA[<h4 id="1-错误说明"><a href="#1-错误说明" class="headerlink" title="1.错误说明"></a>1.错误说明</h4><blockquote><p>这句代码的意思是以本地进行的修改会被覆盖，也就是说你本地进行的修改不会生效。</p></blockquote><h4 id="2-错误起因"><a href="#2-错误起因" class="headerlink" title="2.错误起因"></a>2.错误起因</h4><blockquote><p>一般是使用了git pull相关的命令同步远程仓库到本地引起的，而本地的修改无法上传到远程仓库，导致两者都不能兼备</p></blockquote><h4 id="3-解决方案"><a href="#3-解决方案" class="headerlink" title="3.解决方案"></a>3.解决方案</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> stash  <span class="token comment" spellcheck="true"># 备份当前的工作区的内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中</span><span class="token function">git</span> commit<span class="token function">git</span> stash pop  <span class="token comment" spellcheck="true"># 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容</span>在终端下依次输入上述代码就可以让服务器上的代码更新到了本地，而且你本地修改的代码也没有被覆盖之后使用add，commit，push命令即可更新本地代码到服务器</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
